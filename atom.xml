<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>在这儿写字</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mahui.github.io/"/>
  <updated>2017-03-06T14:55:01.000Z</updated>
  <id>https://mahui.github.io/</id>
  
  <author>
    <name>马荟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么要造轮子</title>
    <link href="https://mahui.github.io/2017/03/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
    <id>https://mahui.github.io/2017/03/06/为什么要造轮子/</id>
    <published>2017-03-06T14:28:36.000Z</published>
    <updated>2017-03-06T14:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>当我在 oschina.net 上以 java orm 作为关键词进行搜索的时候，共找到529条结果。那么我为什么还是要写 ur-orm 呢？</p>
</blockquote>
<ul>
<li>与DB交互的时候，只想调用一个方法就行了</li>
<li>虽然看上去不够高大上，但在代码里写sql感觉就是舒服呀😌</li>
<li>与查询的时候返回个对象用起来遍历，当然了，这也是 ORM 框架最起码要实现的</li>
<li>轻量级，轻量级，还是轻量级。在大家都在说轻量级的时候，要做到真正但轻量级，换ORM的时候，只会觉得当前的代码不够用，而不是发现当前的一堆配置，代码是多余的，对另一个框架来说。当然了，这有点儿偏激。</li>
<li>重要的是，要对味儿。
<ul>
<li>用了好多年的 MyBatis 了，至今还是觉得这是个好的框架，但实在不想在项目开始的时候先来一拖它的配置，不管是 resultMap 还是其它。</li>
<li>JPA 让 Java 开发有了点儿敏捷的意思了，但有时候封装的太深，用起来让人不知所措。</li>
</ul>
</li>
</ul>
<blockquote>
<p>当然了，这个轮子，说不定哪天也会变得让人又爱又恨。😄</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当我在 oschina.net 上以 java orm 作为关键词进行搜索的时候，共找到529条结果。那么我为什么还是要写 ur-orm 呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;与DB交互的时候，只想调用一个方法就行了&lt;/li&gt;
    
    </summary>
    
      <category term="日记" scheme="https://mahui.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="杂记" scheme="https://mahui.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>要做的事情</title>
    <link href="https://mahui.github.io/2017/03/03/%E8%A6%81%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85/"/>
    <id>https://mahui.github.io/2017/03/03/要做的事情/</id>
    <published>2017-03-02T17:20:16.000Z</published>
    <updated>2017-03-06T14:26:39.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>有很多事情要做，把他们列下来</p>
</blockquote>
<h1>side project</h1>
<ul>
<li>ur-orm</li>
</ul>
<h1>学习</h1>
<ul>
<li>vue.js</li>
<li>netty</li>
<li>英语</li>
</ul>
<h1>读书</h1>
<ul>
<li>三体</li>
<li>java虚拟机规范</li>
<li>响应式web设计</li>
</ul>
<h1>产出</h1>
<ul>
<li>git练习代码提交</li>
<li>学习笔记</li>
</ul>
<h1>为什么要学前端</h1>
<p>作为一个一直在写后段代码的人，有着一颗产品的❤️，想要把自己的idea展示出来可不是看着 terminal 中应用启动成功了就行了的。</p>
<blockquote>
<p>时间过的很快，2017年的1/6又没了</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有很多事情要做，把他们列下来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;side project&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ur-orm&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;学习&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;vue.js&lt;/li&gt;
&lt;li&gt;netty
    
    </summary>
    
      <category term="日记" scheme="https://mahui.github.io/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="杂记" scheme="https://mahui.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署笔记</title>
    <link href="https://mahui.github.io/2017/03/01/Hexo%E9%83%A8%E7%BD%B2%E7%AC%94%E8%AE%B0/"/>
    <id>https://mahui.github.io/2017/03/01/Hexo部署笔记/</id>
    <published>2017-03-01T08:10:54.000Z</published>
    <updated>2017-03-02T17:34:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1>主题选择</h1>
<ul>
<li><a href="https://github.com/pinggod/hexo-theme-apollo" title="apollo" target="_blank" rel="external">hexo-theme-apollo</a></li>
<li>网上找了个水滴的图标，好看，一点点寓意。</li>
</ul>
<h1>多客户端写文章的问题</h1>
<p><code>hexo d</code> 执行后 <em>hexo</em> 将 <code>hexo g</code> 生成的 <em>public</em> 文件夹下的静态文件部署到目标服务器，其它 <em>hexo</em> 环境相关的内容则还在本机上，这样势必导致之前辛苦装的一系列插件，主题之类的东西没有办法同步到其它机器上，更换电脑是件麻烦事。</p>
<p>暂且想到集中解决方案</p>
<ul>
<li>使用 dropbox，OneDriver 之类的文件同步服务同步源文件</li>
<li>另外建一个repo同步源文件</li>
<li>网络上还有一种将源文件提交到新分支的做法</li>
</ul>
<p>看了<code>hexo init</code> 后的 <em>blog_dir</em> ,显然 <em>hexo</em> 已经考虑到这方面的问题，支持将源文件提交到 <em>git</em> 仓库中，因为 <em>.gitignore</em> 已经初始化好了。</p>
<p>作为一个稍微有点儿强迫症的狮子座，决定采用新建分支的方法</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd $blog_dir</div><div class="line">git init</div><div class="line">git add *</div><div class="line">git checkout -b $branch_name</div><div class="line">git remote add origin git@github.com:xxxx/xxxx.github.io.git</div><div class="line">git push origin $branch_name:$branch_name</div></pre></td></tr></table></figure></p>
<p>需要注意的是，<em>_config.yml</em> 中 deploy 节点不要暴露敏感信息。
在新的客户端，只需要将代码clone下来，<code>checkout</code>到相应分支，<code>npm install -g hexo-cli</code>,<code>npm install</code> 之后 <code>new</code>, <code>generate</code>, <code>deploy</code> 即可</p>
<p>关于源码的维护，可以将当前 repo 的 default branch 设置为源码的分支，以方便后续维护。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;主题选择&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pinggod/hexo-theme-apollo&quot; title=&quot;apollo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-apoll
    
    </summary>
    
      <category term="笔记" scheme="https://mahui.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="https://mahui.github.io/tags/hexo/"/>
    
      <category term="部署文档" scheme="https://mahui.github.io/tags/%E9%83%A8%E7%BD%B2%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
</feed>
